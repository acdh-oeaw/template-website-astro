---
import { getFormDataValues, log } from "@acdh-oeaw/lib";
import * as v from "valibot";

import MainContent from "@/components/main-content.astro";
import { isValidLocale } from "@/config/i18n.config";
import PageLayout from "@/layouts/page-layout.astro";
import { createI18n } from "@/lib/i18n";
import { sendEmail } from "@/lib/send-email";
import { pageSection, pageTitle } from "@/styles/components";

export const prerender = false;

const locale = Astro.currentLocale;

if (locale == null || !isValidLocale(locale)) {
	return new Response(null, { status: 404, statusText: "Not found" });
}

const { t } = await createI18n(locale);

const documentTitle = t("ContactPage.meta.title");
const title = t("ContactPage.title");

const email = t("ContactForm.email");
const subject = t("ContactForm.subject");
const message = t("ContactForm.message");
const submit = t("ContactForm.submit");

let status = { kind: "initial" } as
	| { kind: "error"; message: string }
	| { kind: "initial" }
	| { kind: "success"; message: string };

if (Astro.request.method === "POST") {
	try {
		const data = await Astro.request.formData();
		const formData = getFormDataValues(data);
		const schema = v.object({
			name: v.pipe(v.string(), v.nonEmpty()),
			email: v.pipe(v.string(), v.email()),
			message: v.pipe(v.string(), v.nonEmpty()),
			subject: v.pipe(v.string(), v.nonEmpty()),
		});
		const result = v.safeParse(schema, formData);
		if (!result.success) {
			status = { kind: "error", message: t("ContactForm.status.invalid-input") };
		} else {
			const { name, email, message, subject } = result.output;
			await sendEmail({
				from: `${name} <${email}>`,
				subject,
				text: message,
				attachments: [],
			});
			status = { kind: "success", message: t("ContactForm.status.success") };
		}
	} catch (error) {
		if (error instanceof Error) {
			log.error(error.message);
		}
		status = { kind: "error", message: t("ContactForm.status.unknown-error") };
	}
}
---

<PageLayout locale={locale} title={documentTitle}>
	<MainContent search="exclude">
		<section class={pageSection}>
			<h1 class={pageTitle}>{title}</h1>

			<form class="grid gap-y-6" data-astro-reload method="post">
				<!-- <TextInputField label={email} name="email" required={true} type="email" /> -->

				<!-- <TextInputField label={subject} name="subject" required={true} /> -->

				<!-- <TextAreaField label={message} name="message" required={true} rows={5} /> -->

				<button
					class="rounded-md bg-neutral-950 px-4 py-2 font-semibold text-neutral-0 transition hover:bg-neutral-700 dark:bg-neutral-0 dark:text-neutral-950 dark:hover:bg-neutral-300"
					type="submit"
				>
					{submit}
				</button>

				<div
					aria-live="polite"
					aria-atomic="true"
					class={status.kind === "error"
						? "text-negative"
						: status.kind === "success"
							? "text-positive"
							: undefined}
				>
					{status.kind !== "initial" ? status.message : null}
				</div>
			</form>
		</section>
	</MainContent>
</PageLayout>
